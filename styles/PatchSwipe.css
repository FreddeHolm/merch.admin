.patchswipediv{
    height:700px;
    position: relative;
    
}

.OurDesigns {
margin: 50px auto -30px auto;
  position: relative;
}

.filtertimeline{
    position: relative;
    display: flex;
    top: 50%;
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);

  }


/* TODO

   <ul style={{marginTop: "-260px", fontSize: "10px"}}>
            {"current index: " + currentIndex} <br/>
            {"structuredProducts.length : " + structuredProducts.length }<br/>
            
        {structuredProducts.reverse().map((product, index) => (
          <li key={index}>{product.name || product.nameeng}</li> 
        ))}
    </ul>




why is it so hard to fix my code like the following: 

I want all products from my database to be gotten and randomized into a list (lets say that there are 48 products in total), I want the products to be semi randomized in that list so the products shown are random, however i want to have between 1-3 of a product with product.tags.includes('patches') before 1 product with !product.tags.includes('patches') is shown, and since the nature of my tindercard code the last part of the list is shown first, so this logic needs to be applied from the back of the list to the front, not the other way around like it usualy is.  

From that list we create i initialy only want the 10 first products to be initialy loaded/visible and the userindex/index whatever should start at 0 and move upwards when the user swipes, So lets say the user swipes the first product, the userindex should be 1, swiping the second product should set it to 2 and so on. once the difference between the userindex and the currently visible products is 3 or less (so if the visable products are 10 and the user index is 7 for example,) the list of visable products should be extended by 10 products, (so the total would be 20 total visable products while the userindex would stay the same) this shall continue untill the in this example with max products 48 products have all been shown, and when the last product is swiped and there are no more products to show nothing more should be loaded). Remember that the tinder card pile of products show the latest card in the list first (so the top card of the cardpile to swipe on is the one lowest in the list, take that inta account when creating the function) 

how do i make my code fit this criteria, YOu have free hands to implement this function however you like, the only thing is that you need to write it so i can copy and paste the entire code over my exsisting code, so leave nothing out (no coments or anything out from your answer) however you are free to change whatever you need to get this done

This is the code i have.













   <ul style={{marginTop: "-260px", fontSize: "10px"}}>
        {structuredProducts.reverse().map((product, index) => (
          <li key={index}>{product.name || product.nameeng}</li> 
        ))}
    </ul>





  .ant-switch{
     background-color: #7a7a7a !important; 
  }
  .ant-switch-checked {
     background-color: #7a7a7a !important; 
  } 
  /* above: change background color of switch */


  .filter-container{
    display: flex; /* set display property to flex */
    justify-content: center; /* center horizontally */
    align-items: center; /* center vertically */
    margin-top: 40px;
    margin-bottom: -30px;
  }

  .switch-style{
    display: inline;
    transform: scale(1.5); /* */
    margin-right: 30px;
    margin-top: 5px;
    margin-left: 30px;  
  }

.finishswipe{
    text-align: center;
} 

.OurDesigns .title {
    text-align: center;
    letter-spacing: 3px;
    font-size: 3.2em;
    line-height: 48px;
    padding-bottom: 48px;
    color: var(--primarycolor);
    background: var(--primarycolor);
    background: -moz-linear-gradient(left,var(--primarycolor) 0%,var(--primarycolor)  100%) !important; /* #e0ce2a Alt gulfÃ¤rg #dfdc30 */
    background: -webkit-linear-gradient(left,var(--primarycolor) 0%,var(--primarycolor)  100%) !important;
    background: linear-gradient(to right,var(--primarycolor) 0%,var(--primarycolor)  100%) !important;
      -webkit-background-clip: text !important;
      -webkit-text-fill-color: transparent !important;
  }

.card {
    position: relative;
    width: 60vh;
    padding: 20px;
    min-width: 300px; 
    max-width: 85vw;
    height: 50vh;
    min-height: 300px; 
    max-height: 600px;
    border: 1px rgba(0, 0, 0, 0.178) solid;
    border-radius: 20px;
    background-size: cover;
    background-position: center;
    box-shadow: 0px 18px 53px 0px rgba(0, 0, 0, 0.116);
    
}





.newcard{
  position: relative;
    width: 60vh;
    /* padding: 20px;*/
    min-width: 300px; 
    max-width: 85vw;
    height: 50vh;
    min-height: 300px; 
    max-height: 600px;
    border: 1px rgba(0, 0, 0, 0.178) solid;
    /* border-radius: 20px; */
    background-size: cover;
    background-position: center;
    /* box-shadow: 0px 18px 53px 0px rgba(0, 0, 0, 0.116);
*/
    }

.newcard > h1 {
  position: absolute;
}

.tindercardtext {
    
}
.card > h1 {
  position: absolute;
}
.tinderCards__cardContainer{
    display: flex;
    justify-content: center;
    margin-top: 5vh;
}

.swipe{
    position: absolute;
}




.swipeform{
    
position: absolute;    

top: 20%;

left: auto;
right: auto;

}

.swipe-img-logo-hover{
  opacity: 0.5; 
  cursor: pointer;
}


.swipe-img-logo-hover:hover{
  opacity: 1;
}


@media (max-width: 900px) {
.oncardbuttons{
  display: none;
}
}













.swipeButtons {
  position: relative;
  display: flex;
  width: 100%; /* width: 100%; */
  justify-content: space-evenly;
  align-items: center;
  min-height: 900px;
  max-height: 1300px;
  height: 114vh;

  touch-action: manipulation
}


.swipeButtons2 {
  position: relative;
  display: flex;
  width: 30%; /* width: 100%; */
  justify-content: space-evenly;
  align-items: center;
  height: 60px;
  touch-action: manipulation
}

.swipeButtons2 .MuiIconButton-root{
  background-color: white;
  box-shadow: 0px 10px 40px 0px rgba(0, 0, 0, 0.3) !important;
  padding: 20px !important;
}

.swipeButtons2 .swipeButtons_center, 
.swipeButtons2 .swipeButtons_leftest, 
.swipeButtons2 .swipeButtons_rightest {
  background-color: white; /* Example background color */
  box-shadow: 0px 5px 20px 0px rgba(0, 0, 0, 0.3) !important; /* Different shadow */
  padding: 15px !important; /* Custom padding */
  border-radius: 50%; /* Make it circular */
}


@media screen and (min-width: 1000px) {
  .swipeButtons{

      width: 60%;
      margin-left: 20%;
      margin-right: 20%;    
  }
}


/*
swipeButtons__repeat
swipeButtons__left
swipeButtons__star
swipeButtons__right
swipeButtons__lightning
*/

.swipeButtons .MuiIconButton-root{
  background-color: white;
  box-shadow: 0px 10px 53px 0px rgba(0, 0, 0, 0.3) !important;
  padding: 3vw !important;
}
@media screen and (min-width: 1000px) {
  .swipeButtons .MuiIconButton-root {
      padding: 1.3vw !important;
  }
}
@media screen and (min-width: 2000px) {
  .swipeButtons .MuiIconButton-root {
      padding: 20px !important;
  }
}


.swipeButtons__repeat {
  color: #f5b748 !important; 
}
.swipeButtons__left {
  color: #ec5e6f !important; 
}
.swipeButtons__star {
  color: #636363 !important; 
}


.swipeButtons_right {
  color: #00CE90 !important; 
}

.swipeButtons_rightest {
  color: #31CBFF !important; 
}



.swipeButtons__right {
  color: #e0962a !important; 
}

.swipeButtons__lightning {
  color: #c74f4f !important; 
}
